
import json
import os
from pathlib import Path

def read_json_file(file_path):
    """–ß–∏—Ç–∞–µ—Ç JSON —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            return json.load(f)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
        return None

def generate_toc(checks_data):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ —Å —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    toc = "## üìã –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ\n\n"
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    sorted_checks = sorted(checks_data.items())
    
    for filename, check_data in sorted_checks:
        marketplace = check_data.get('marketplace', {})
        name = marketplace.get('name', check_data.get('name', filename))
        # –°–æ–∑–¥–∞–µ–º anchor link –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        anchor = filename.replace('.json', '').replace('-', '')
        toc += f"- [{name}](#{anchor})\n"
    
    toc += "\n"
    return toc

def generate_check_description(check_data, filename):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ"""
    marketplace = check_data.get('marketplace', {})
    name = marketplace.get('name', check_data.get('name', filename))
    description = marketplace.get('description', '–û–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç')
    tags = marketplace.get('tags', [])
    secrets_required = marketplace.get('secrets', False)
    
    check_type = check_data.get('type', 'unknown')
    interval = check_data.get('interval', '–Ω–µ —É–∫–∞–∑–∞–Ω')
    timeout = check_data.get('timeout', '–Ω–µ —É–∫–∞–∑–∞–Ω')
    
    # –°–æ–∑–¥–∞–µ–º anchor –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    anchor = filename.replace('.json', '').replace('-', '')
    
    result = f"### {name} {{#{anchor}}}\n\n"
    
    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ —Ç–∞–±–ª–∏—Ü–µ
    result += "| –ü–∞—Ä–∞–º–µ—Ç—Ä | –ó–Ω–∞—á–µ–Ω–∏–µ |\n"
    result += "|----------|----------|\n"
    result += f"| **–§–∞–π–ª** | `{filename}` |\n"
    result += f"| **–¢–∏–ø –ø—Ä–æ–≤–µ—Ä–∫–∏** | {check_type} |\n"
    result += f"| **–ò–Ω—Ç–µ—Ä–≤–∞–ª** | {interval} —Å–µ–∫ |\n"
    result += f"| **–¢–∞–π–º–∞—É—Ç** | {timeout} —Å–µ–∫ |\n"
    
    if tags:
        result += f"| **–¢–µ–≥–∏** | {', '.join(tags)} |\n"
    
    if secrets_required:
        result += f"| **–¢—Ä–µ–±—É–µ—Ç —Å–µ–∫—Ä–µ—Ç—ã** | ‚ö†Ô∏è –î–∞ |\n"
    
    result += "\n"
    result += f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {description}\n\n"
    
    if secrets_required:
        result += "‚ö†Ô∏è **–í–Ω–∏–º–∞–Ω–∏–µ:** –î–ª—è —ç—Ç–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º.\n\n"
    
    # –ö–æ–º–∞–Ω–¥—ã –≤ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ
    result += "#### –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n\n"
    result += "| –ú–µ—Ç–æ–¥ | –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ | –ï–¥–∏–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∑–∞–ø—É—Å–∫ |\n"
    result += "|-------|------------------------------|---------------------|\n"
    
    # cURL –∫–æ–º–∞–Ω–¥—ã
    curl_create = f"`curl -X POST -H \"Authorization: –í–ê–®_–¢–û–ö–ï–ù\" -H \"Content-Type: application/json\" -d @{check_data.get('type', 'multistep')}/{filename} https://api.pingera.ru/v1/checks`"
    curl_execute = f"`curl -X POST -H \"Authorization: –í–ê–®_–¢–û–ö–ï–ù\" -H \"Content-Type: application/json\" -d @{check_data.get('type', 'multistep')}/{filename} https://api.pingera.ru/v1/checks/execute`"
    
    result += f"| **cURL** | {curl_create} | {curl_execute} |\n"
    
    # CLI –∫–æ–º–∞–Ω–¥—ã
    cli_create = f"`pngr checks create --from-file {check_data.get('type', 'multistep')}/{filename}`"
    cli_execute = f"`pngr checks run custom --from-file {check_data.get('type', 'multistep')}/{filename}`"
    
    result += f"| **Pingera CLI** | {cli_create} | {cli_execute} |\n"
    
    result += "\n"
    
    return result

def generate_readme_content(folder_name, checks_data):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ README —Ñ–∞–π–ª–∞"""
    folder_display_name = "–ú–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏" if folder_name == "multistep" else "–°–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏"
    
    content = f"# {folder_display_name}\n\n"
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
    content += "üöÄ **–≠—Ç–∏ —Å–∫—Ä–∏–ø—Ç—ã –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ [–ü–ª–∞—Ç—Ñ–æ—Ä–º–µ Pingera](https://pingera.ru)**\n\n"
    content += "- **–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:** [app.pingera.ru](https://app.pingera.ru) - —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏\n"
    content += "- **–°–∞–π—Ç:** [pingera.ru](https://pingera.ru) - –æ–±—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ\n"
    content += "- **–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:** [docs.pingera.ru](https://docs.pingera.ru) - –ø–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ API –∏ CLI\n\n"
    
    if folder_name == "multistep":
        content += "## üîÑ –û –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã—Ö –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö\n\n"
        content += "–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω—ã –º–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ (multistep checks), –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç Playwright –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–æ–∂–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –∏ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π.\n\n"
        content += "**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
        content += "- ‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤\n"
        content += "- ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints\n"
        content += "- ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω—ã—Ö –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å–æ–≤\n"
        content += "- ‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–æ–≤ –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏\n\n"
    else:
        content += "## üé≠ –û —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö\n\n"
        content += "–≠—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω—ã —Å–∏–Ω—Ç–µ—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ (synthetic checks), –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç Playwright –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–≤ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤.\n\n"
        content += "**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
        content += "- ‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤\n"
        content += "- ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü\n"
        content += "- ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞\n"
        content += "- ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Ñ–æ—Ä–º –∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–≥–ª–∞–≤–ª–µ–Ω–∏–µ
    content += generate_toc(checks_data)
    
    content += "---\n\n"
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    sorted_checks = sorted(checks_data.items())
    
    for filename, check_data in sorted_checks:
        content += generate_check_description(check_data, filename)
    
    content += "---\n\n"
    content += "## üìö –°–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n\n"
    
    content += "### üîë –ü–æ–ª—É—á–µ–Ω–∏–µ API —Ç–æ–∫–µ–Ω–∞\n\n"
    content += "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å API –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è **API —Ç–æ–∫–µ–Ω**. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ:\n"
    content += "1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ [app.pingera.ru](https://app.pingera.ru)\n"
    content += "2. –û—Ç–∫—Ä–æ–π—Ç–µ —Ä–∞–∑–¥–µ–ª [**\"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\" ‚Üí \"API –∫–ª—é—á–∏\"**](https://app.pingera.ru/settings/tokens)\n"
    content += "3. –ù–∞–∂–º–∏—Ç–µ \"–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–æ–∫–µ–Ω\"\n\n"
    
    content += "### üîê –†–∞–±–æ—Ç–∞ —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏\n\n"
    content += "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–±—É—é—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è [–°–µ–∫—Ä–µ—Ç–æ–≤](https://docs.pingera.ru/checks/secrets). "
    content += "–°–æ–∑–¥–∞–π—Ç–µ –∏—Ö –∑–∞—Ä–∞–Ω–µ–µ —á–µ—Ä–µ–∑:\n\n"
    content += "**–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:**\n"
    content += "1. [app.pingera.ru](https://app.pingera.ru) ‚Üí \"–°–µ–∫—Ä–µ—Ç—ã\"\n"
    content += "2. –ù–∞–∂–º–∏—Ç–µ \"–°–æ–∑–¥–∞—Ç—å —Å–µ–∫—Ä–µ—Ç\"\n\n"
    content += "**CLI:**\n"
    content += "```bash\n"
    content += "pngr secrets create --name \"SECRET_NAME\" --value \"SECRET_VALUE\"\n"
    content += "```\n\n"
    
    content += "### üåç –†–µ–≥–∏–æ–Ω—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è\n\n"
    content += "–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –ø—Ä–æ–≤–µ—Ä–æ–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤:\n\n"
    content += "| –†–µ–≥–∏–æ–Ω | –û–ø–∏—Å–∞–Ω–∏–µ |\n"
    content += "|--------|----------|\n"
    content += "| `RU, Moscow` | –ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è |\n"
    content += "| `EU, West` | –ó–∞–ø–∞–¥–Ω–∞—è –ï–≤—Ä–æ–ø–∞ |\n"
    content += "| `US, East coast` | –í–æ—Å—Ç–æ—á–Ω–æ–µ –ø–æ–±–µ—Ä–µ–∂—å–µ –°–®–ê |\n"
    content += "| `IN, Mumbai` | –ú—É–º–±–∞–∏, –ò–Ω–¥–∏—è |\n"
    content += "| `QA, Doha` | –î–æ—Ö–∞, –ö–∞—Ç–∞—Ä |\n\n"
    
    content += "–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ä–µ–≥–∏–æ–Ω—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥ –µ—ë —Å–æ–∑–¥–∞–Ω–∏–µ–º.\n\n"
    
    content += "### üìñ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã\n\n"
    content += "- [–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø–æ API](https://docs.pingera.ru/api)\n"
    content += "- [–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ CLI](https://docs.pingera.ru/devs/cli)\n"
    content += "- [–ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–≤–µ—Ä–æ–∫](https://docs.pingera.ru/checks)\n"
    content += "- [–†–∞–±–æ—Ç–∞ —Å —Å–µ–∫—Ä–µ—Ç–∞–º–∏](https://docs.pingera.ru/checks/secrets)\n\n"
    
    return content

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    folders = ['multistep', 'synthetic']
    
    for folder in folders:
        if not os.path.exists(folder):
            print(f"–ü–∞–ø–∫–∞ {folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            continue
        
        checks_data = {}
        
        # –ß–∏—Ç–∞–µ–º –≤—Å–µ JSON —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
        for file_path in Path(folder).glob('*.json'):
            check_data = read_json_file(file_path)
            if check_data:
                checks_data[file_path.name] = check_data
        
        if not checks_data:
            print(f"–í –ø–∞–ø–∫–µ {folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ JSON —Ñ–∞–π–ª–æ–≤")
            continue
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ README
        readme_content = generate_readme_content(folder, checks_data)
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º README —Ñ–∞–π–ª
        readme_path = os.path.join(folder, 'README.md')
        try:
            with open(readme_path, 'w', encoding='utf-8') as f:
                f.write(readme_content)
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª {readme_path}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ {readme_path}: {e}")

if __name__ == "__main__":
    main()
